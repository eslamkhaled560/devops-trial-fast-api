name: CI/CD - FastAPI ECS

on:
  push:
    branches:
      - main
  workflow_dispatch:        # allows manual trigger from Actions tab

env:
  AWS_REGION: us-east-1
  ECR_REPO_NAME: devops-trial-fastapi-app
  TF_DIR: terraform

jobs:
  build-and-deploy:
    name: Build & Deploy to ECS
    runs-on: ubuntu-latest

    steps:
      # Checkout source code
      - name: Checkout repository
        uses: actions/checkout@v4

      # Configure AWS credentials
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ env.AWS_REGION }}

      # Login to Amazon ECR
      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v2

      # Build and push Docker image
      - name: Build and push Docker image to ECR
        env:
          ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
          IMAGE_TAG: ${{ github.sha }}
        run: |
          cd app
          docker build -t $ECR_REGISTRY/${{ env.ECR_REPO_NAME }}:$IMAGE_TAG .
          docker push $ECR_REGISTRY/${{ env.ECR_REPO_NAME }}:$IMAGE_TAG
          echo "IMAGE_URI=$ECR_REGISTRY/${{ env.ECR_REPO_NAME }}:$IMAGE_TAG" >> $GITHUB_ENV

      # Setup Terraform
      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: 1.8.0

      # Terraform Init
      - name: Terraform Init
        working-directory: ${{ env.TF_DIR }}
        run: terraform init

      # Terraform Apply
      - name: Terraform Apply
        working-directory: ${{ env.TF_DIR }}
        env:
          TF_VAR_image_uri: ${{ env.IMAGE_URI }}
        run: |
          terraform apply -auto-approve
